apiVersion: apps/v1
kind: Deployment
metadata:
  name: volume-nfs-provisoner
  labels:
    app: volume-nfs-provisoner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: volume-nfs-provisoner
  template:
    metadata:
      labels:
        app: volume-nfs-provisoner
    spec:
      serviceAccount: volume-nfs-provisioner
      restartPolicy: Always
      terminationGracePeriodSeconds: 0
      containers:
      - name: provisioner
        image: daocloud.io/piraeus/volume-nfs-provisioner
        imagePullPolicy: Always
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          limits:
            cpu: '200m'
            memory: '200Mi'
        args: [ -name=nfs.volume.io ]
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - k8s-worker-1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: volume-nfs-provisioner
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volume-nfs-provisioner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volume-nfs-provisioner
subjects:
  - kind: ServiceAccount
    name: volume-nfs-provisioner
    namespace: default
roleRef:
  kind: ClusterRole
  name: volume-nfs-provisioner
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-locking-volume-nfs-provisioner
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "update", "patch"]
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["list", "watch", "create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-locking-volume-nfs-provisioner
subjects:
  - kind: ServiceAccount
    name: volume-nfs-provisioner
    namespace: default
roleRef:
  kind: Role
  name: leader-locking-volume-nfs-provisioner
  apiGroup: rbac.authorization.k8s.io